datasource db {
  provider                      = "postgresql"
  url                           = env("DATABASE_URL")
}

generator client {
  provider                      = "prisma-client-js"
  binaryTargets                 = "native"
}

model Account {
  id                            String                            @id @default(uuid())
  email                         String                            @unique
  name                          String
  disabled                      Boolean                           @default(false)
  //
  verified                      Boolean                           @default(false)
  verifiedAt                    DateTime?
  //
  hashedPassword                String
  salt                          String
  //
  createdAt                     DateTime                          @default(now())
  updatedAt                     DateTime                          @updatedAt
  lastLoginAt                   DateTime                          @default(now())
  //
  organizationId                String?
  organization                  Organization?                     @relation(fields: [organizationId], references: [id])
  //
  roles                         Role[]
}

model Account_Confirmation {
  id                            String                            @id @default(uuid())
  code                          String                            @unique
  email                         String
  organizationId                String?
  //
  createdAt                    DateTime                           @default(now())
}

model Organization {
  id                            String                            @id @default(uuid())
  name                          String                            @unique
  //
  createdAt                     DateTime                          @default(now())
  updatedAt                     DateTime                          @updatedAt
  //
  accounts                      Account[]
  roles                         Role[]
}

model Role {
  id                            String                            @id @default(uuid())
  name                          String
  color                         String                            @default("#5D32BA")
  //
  createdAt                     DateTime                          @default(now())
  updatedAt                     DateTime                          @updatedAt
  //
  organizationId                String
  organization                  Organization                      @relation(fields: [organizationId], references: [id])
  //
  accounts                      Account[]
  //
  permissions                   Permission[]
  //
  @@unique([name, organizationId])
}

model Permission {
  id                            String                            @id @default(uuid())
  application                   String
  namespace                     String
  object                        String                            @default("")
  relation                      String                            @default("")
  access_relation               String?
  //
  created_at                    DateTime                          @default(now())
  updated_at                    DateTime                          @default(now())
  //
  roles                         Role[]
  //
  @@unique([application, namespace, object, relation])
}
